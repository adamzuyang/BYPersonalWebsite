let testX = [300.0, 299.9763132611448, 299.90525678499, 299.78684179217674, 299.62108698180526, 299.4080185284815, 299.1476700781842, 298.8400827429518, 298.48530509439007, 298.0833931560025, 297.6344103943434, 297.1384277089954, 296.5955234213742, 296.0057832623604, 295.3693003587616, 294.6861752186066, 293.95651571527407, 293.180437070458, 292.35806183597316, 291.4895198744022, 290.5749483385893, 289.61449164998214, 288.6083014758258, 287.55653670521275, 286.4593634239929, 285.31695488854604, 284.12949149842325, 282.89716076785936, 281.62015729616223, 280.2986827369836, 278.9329457664754, 277.5231620503374, 276.0695542097611, 274.57235178627525, 273.0317912054987, 271.44811573980587, 269.8215754699113, 268.15242724537916, 266.44093464406336, 264.687367930486, 262.89200401315907, 261.0551264008577, 259.1770251578506, 257.2579968580957, 255.29834453840758, 253.29837765060452, 251.2584120126425, 249.1787697587438, 247.05977928852823, 244.90177521515523, 242.70509831248424, 240.47009546126299, 238.19711959435057, 235.88652964098569, 233.53869047010704, 231.15397283273674, 228.73275330343438, 226.27541422083115, 223.78234362725462, 221.25393520745217, 218.69058822642347, 216.09270746637208, 213.4607031627856, 210.79499093965475, 208.09599174384152, 205.3641317786066, 202.59984243630734, 199.8035602302755, 196.97572672588694, 194.1167884708333, 191.22719692460691, 188.30740838721016, 185.35788392710032, 182.37908930838165, 179.3714949172557, 176.33557568774197, 173.2718110266803, 170.180684738027, 167.06268494645641, 163.91830402028074, 160.748038493699, 157.55238898838874, 154.331860134452, 151.08696049072825, 147.81820246448746, 144.52610223051462, 141.21117964959979, 137.87395818644637, 134.51496482700975, 131.13472999527986, 127.7337874695218, 124.31267429798528, 120.8719307140988, 117.41210005116076, 113.93372865654034, 110.43736580540336, 106.92356361397522, 103.39287695235515, 99.845863356896, 96.28308294216284, 92.70509831248424, 89.11247447311045, 85.50577874099285, 81.88558065519761, 78.25245188696903, 74.60696614945643, 70.94969910711743, 67.28122828481435, 63.60213297661641, 59.91299415432216, 56.214394375717355, 52.50691769258281, 48.79114955846511, 45.06767673622712, 41.337087205391455, 37.599970069291274, 33.856915462044476, 30.10851445536447, 26.35535896522299, 22.598041658379824, 18.837155858794056, 15.073295453930879, 11.307054800980344, 7.5390286330012595, 3.7698119650058324, 1.8369701987210297e-14, -3.769811965005796, -7.539028633001222, -11.307054800980373, -15.073295453930841, -18.837155858793952, -22.59804165837986, -26.35535896522296, -30.10851445536444, -33.856915462044505, -37.599970069291246, -41.33708720539143, -45.06767673622715, -48.79114955846507, -52.506917692582775, -56.21439437571738, -59.912994154322064, -63.60213297661639, -67.28122828481438, -70.9496991071174, -74.60696614945638, -78.25245188696907, -81.88558065519759, -85.50577874099281, -89.1124744731105, -92.7050983124842, -96.28308294216279, -99.84586335689598, -103.39287695235512, -106.92356361397519, -110.43736580540339, -113.9337286565403, -117.41210005116066, -120.87193071409882, -124.31267429798524, -127.73378746952183, -131.13472999527983, -134.51496482700963, -137.87395818644637, -141.21117964959967, -144.5261022305145, -147.81820246448754, -151.08696049072825, -154.33186013445192, -157.55238898838874, -160.74803849369894, -163.91830402028071, -167.0626849464564, -170.18068473802686, -173.2718110266802, -176.3355756877419, -179.37149491725555, -182.37908930838165, -185.35788392710032, -188.3074083872101, -191.2271969246069, -194.1167884708333, -196.97572672588686, -199.80356023027542, -202.5998424363073, -205.36413177860652, -208.0959917438414, -210.79499093965484, -213.4607031627856, -216.09270746637208, -218.6905882264235, -221.25393520745212, -223.78234362725462, -226.27541422083115, -228.7327533034343, -231.15397283273674, -233.538690470107, -235.8865296409856, -238.19711959435062, -240.470095461263, -242.7050983124842, -244.90177521515523, -247.05977928852826, -249.17876975874375, -251.2584120126425, -253.29837765060452, -255.29834453840752, -257.2579968580956, -259.17702515785066, -261.0551264008577, -262.8920040131591, -264.687367930486, -266.44093464406336, -268.15242724537916, -269.8215754699113, -271.4481157398058, -273.0317912054987, -274.57235178627525, -276.06955420976107, -277.5231620503374, -278.9329457664754, -280.2986827369836, -281.62015729616223, -282.89716076785936, -284.12949149842325, -285.31695488854604, -286.4593634239929, -287.55653670521275, -288.6083014758257, -289.61449164998214, -290.5749483385893, -291.4895198744022, -292.35806183597316, -293.180437070458, -293.95651571527407, -294.6861752186066, -295.3693003587616, -296.0057832623604, -296.5955234213742, -297.1384277089954, -297.6344103943433, -298.0833931560025, -298.48530509439007, -298.8400827429518, -299.1476700781842, -299.4080185284815, -299.62108698180526, -299.78684179217674, -299.90525678499, -299.9763132611448, -300.0, -299.9763132611448, -299.90525678499, -299.78684179217674, -299.62108698180526, -299.4080185284815, -299.1476700781842, -298.8400827429518, -298.48530509439007, -298.0833931560025, -297.6344103943434, -297.1384277089954, -296.5955234213742, -296.0057832623604, -295.3693003587616, -294.6861752186066, -293.95651571527407, -293.180437070458, -292.35806183597316, -291.4895198744022, -290.57494833858937, -289.61449164998214, -288.6083014758258, -287.55653670521275, -286.45936342399284, -285.3169548885461, -284.1294914984233, -282.8971607678593, -281.62015729616223, -280.29868273698366, -278.9329457664754, -277.5231620503374, -276.0695542097611, -274.57235178627525, -273.0317912054987, -271.4481157398058, -269.8215754699113, -268.15242724537916, -266.44093464406336, -264.687367930486, -262.8920040131591, -261.0551264008577, -259.1770251578506, -257.25799685809574, -255.29834453840752, -253.2983776506045, -251.25841201264254, -249.1787697587438, -247.0597792885282, -244.90177521515523, -242.70509831248424, -240.47009546126299, -238.19711959435068, -235.8865296409857, -233.53869047010707, -231.15397283273677, -228.73275330343438, -226.27541422083112, -223.78234362725468, -221.25393520745217, -218.69058822642347, -216.09270746637213, -213.46070316278568, -210.79499093965478, -208.0959917438416, -205.36413177860658, -202.5998424363073, -199.80356023027554, -196.97572672588694, -194.11678847083326, -191.2271969246069, -188.3074083872103, -185.35788392710043, -182.3790893083817, -179.37149491725575, -176.33557568774197, -173.2718110266803, -170.18068473802697, -167.06268494645659, -163.91830402028066, -160.74803849369914, -157.55238898838883, -154.3318601344518, -151.0869604907283, -147.8182024644875, -144.5261022305146, -141.21117964959973, -137.87395818644652, -134.51496482700958, -131.13472999528, -127.73378746952189, -124.31267429798531, -120.87193071409882, -117.41210005116073, -113.9337286565403, -110.43736580540333, -106.92356361397538, -103.392876952355, -99.8458633568961, -96.28308294216293, -92.70509831248427, -89.1124744731105, -85.50577874099308, -81.88558065519751, -78.252451886969, -74.60696614945658, -70.94969910711727, -67.28122828481445, -63.60213297661645, -59.91299415432214, -56.21439437571739, -52.50691769258305, -48.79114955846502, -45.06767673622703, -41.337087205391555, -37.59997006929112, -33.856915462044576, -30.10851445536451, -26.355358965222962, -22.598041658379795, -18.837155858794226, -15.07329545393078, -11.30705480098051, -7.5390286330013625, -3.769811965005603, -5.510910596163089e-14, 3.7698119650057587, 7.539028633001252, 11.307054800980405, 15.073295453930672, 18.837155858794116, 22.59804165837969, 26.355358965222855, 30.108514455364404, 33.85691546204447, 37.59997006929127, 41.33708720539145, 45.06767673622717, 48.79114955846491, 52.50691769258294, 56.21439437571728, 59.91299415432202, 63.602132976616346, 67.28122828481433, 70.94969910711715, 74.60696614945648, 78.25245188696917, 81.88558065519743, 85.50577874099298, 89.1124744731104, 92.70509831248417, 96.28308294216284, 99.845863356896, 103.3928769523549, 106.92356361397528, 110.43736580540325, 113.93372865654021, 117.41210005116088, 120.87193071409874, 124.31267429798521, 127.7337874695218, 131.13472999527988, 134.5149648270095, 137.87395818644643, 141.21117964959964, 144.52610223051448, 147.81820246448763, 151.08696049072822, 154.33186013445192, 157.5523889883887, 160.748038493699, 163.91830402028057, 167.0626849464565, 170.18068473802683, 173.27181102668018, 176.33557568774188, 179.3714949172556, 182.37908930838162, 185.35788392710032, 188.30740838721016, 191.2271969246068, 194.1167884708334, 196.97572672588686, 199.80356023027542, 202.5998424363073, 205.36413177860658, 208.09599174384132, 210.79499093965478, 213.46070316278568, 216.092707466372, 218.69058822642356, 221.25393520745212, 223.7823436272546, 226.27541422083112, 228.73275330343438, 231.15397283273666, 233.53869047010707, 235.88652964098557, 238.1971195943505, 240.4700954612631, 242.7050983124842, 244.90177521515517, 247.05977928852823, 249.1787697587438, 251.2584120126424, 253.29837765060458, 255.2983445384075, 257.2579968580956, 259.17702515785055, 261.05512640085766, 262.89200401315907, 264.687367930486, 266.44093464406336, 268.15242724537904, 269.82157546991135, 271.4481157398058, 273.0317912054987, 274.57235178627525, 276.06955420976107, 277.5231620503373, 278.9329457664754, 280.29868273698366, 281.6201572961622, 282.8971607678594, 284.12949149842325, 285.31695488854604, 286.4593634239929, 287.55653670521275, 288.6083014758257, 289.61449164998214, 290.5749483385893, 291.48951987440216, 292.35806183597316, 293.180437070458, 293.95651571527407, 294.6861752186066, 295.3693003587616, 296.00578326236035, 296.5955234213742, 297.1384277089954, 297.6344103943433, 298.08339315600256, 298.48530509439007, 298.8400827429518, 299.1476700781842, 299.4080185284815, 299.62108698180526, 299.78684179217674, 299.90525678499, 299.9763132611448];
let testY = [0.0, 3.769811965005782, 7.5390286330012435, 11.307054800980362, 15.073295453930866, 18.837155858794013, 22.598041658379817, 26.35535896522295, 30.108514455364467, 33.856915462044505, 37.599970069291274, 41.33708720539141, 45.06767673622712, 48.79114955846508, 52.50691769258281, 56.21439437571738, 59.91299415432211, 63.602132976616396, 67.28122828481435, 70.9496991071174, 74.60696614945644, 78.25245188696908, 81.88558065519754, 85.50577874099284, 89.11247447311048, 92.70509831248422, 96.28308294216286, 99.84586335689599, 103.39287695235512, 106.92356361397522, 110.43736580540337, 113.93372865654031, 117.41210005116073, 120.8719307140988, 124.31267429798524, 127.7337874695218, 131.13472999527986, 134.51496482700966, 137.87395818644637, 141.21117964959979, 144.5261022305146, 147.81820246448746, 151.08696049072825, 154.33186013445192, 157.55238898838869, 160.748038493699, 163.91830402028074, 167.0626849464564, 170.18068473802697, 173.2718110266803, 176.33557568774194, 179.37149491725566, 182.37908930838165, 185.3578839271003, 188.30740838721013, 191.22719692460691, 194.11678847083326, 196.97572672588691, 199.8035602302755, 202.5998424363073, 205.36413177860658, 208.09599174384152, 210.79499093965475, 213.4607031627856, 216.09270746637208, 218.6905882264234, 221.25393520745217, 223.78234362725462, 226.27541422083112, 228.73275330343438, 231.15397283273674, 233.538690470107, 235.88652964098566, 238.19711959435057, 240.47009546126296, 242.7050983124842, 244.90177521515517, 247.0597792885282, 249.17876975874375, 251.2584120126425, 253.29837765060452, 255.29834453840752, 257.2579968580956, 259.1770251578506, 261.0551264008577, 262.89200401315907, 264.687367930486, 266.44093464406336, 268.1524272453791, 269.8215754699113, 271.44811573980587, 273.0317912054987, 274.57235178627525, 276.06955420976107, 277.5231620503374, 278.9329457664754, 280.2986827369836, 281.62015729616223, 282.8971607678593, 284.1294914984233, 285.31695488854604, 286.4593634239929, 287.55653670521275, 288.6083014758257, 289.61449164998214, 290.5749483385893, 291.4895198744022, 292.35806183597316, 293.180437070458, 293.95651571527407, 294.6861752186066, 295.3693003587616, 296.0057832623604, 296.5955234213742, 297.1384277089954, 297.6344103943434, 298.0833931560025, 298.48530509439007, 298.8400827429518, 299.1476700781842, 299.4080185284815, 299.62108698180526, 299.78684179217674, 299.90525678499, 299.9763132611448, 300.0, 299.9763132611448, 299.90525678499, 299.78684179217674, 299.62108698180526, 299.4080185284815, 299.1476700781842, 298.8400827429518, 298.48530509439007, 298.0833931560025, 297.6344103943434, 297.1384277089954, 296.5955234213742, 296.0057832623604, 295.3693003587616, 294.6861752186066, 293.95651571527407, 293.180437070458, 292.35806183597316, 291.4895198744022, 290.57494833858937, 289.61449164998214, 288.6083014758257, 287.5565367052128, 286.4593634239929, 285.3169548885461, 284.1294914984233, 282.89716076785936, 281.62015729616223, 280.29868273698366, 278.9329457664754, 277.5231620503374, 276.0695542097611, 274.57235178627525, 273.0317912054987, 271.4481157398058, 269.8215754699113, 268.15242724537916, 266.44093464406336, 264.687367930486, 262.8920040131591, 261.05512640085766, 259.1770251578506, 257.2579968580957, 255.29834453840752, 253.29837765060455, 251.25841201264254, 249.1787697587438, 247.0597792885283, 244.90177521515523, 242.70509831248424, 240.47009546126304, 238.19711959435057, 235.88652964098566, 233.53869047010707, 231.15397283273677, 228.73275330343438, 226.27541422083118, 223.78234362725468, 221.25393520745217, 218.69058822642353, 216.09270746637213, 213.46070316278553, 210.79499093965475, 208.09599174384147, 205.36413177860655, 202.59984243630737, 199.8035602302755, 196.97572672588691, 194.11678847083337, 191.22719692460694, 188.30740838721016, 185.3578839271004, 182.3790893083816, 179.3714949172556, 176.33557568774197, 173.2718110266803, 170.1806847380269, 167.06268494645644, 163.91830402028074, 160.748038493699, 157.55238898838883, 154.331860134452, 151.08696049072816, 147.81820246448746, 144.52610223051457, 141.21117964959973, 137.8739581864464, 134.5149648270097, 131.13472999527986, 127.73378746952187, 124.3126742979853, 120.87193071409881, 117.41210005116083, 113.93372865654028, 110.4373658054033, 106.92356361397522, 103.39287695235512, 99.84586335689595, 96.2830829421629, 92.70509831248425, 89.11247447311048, 85.50577874099294, 81.88558065519763, 78.25245188696911, 74.60696614945644, 70.94969910711738, 67.2812282848143, 63.60213297661643, 59.912994154322114, 56.21439437571736, 52.506917692582896, 48.79114955846512, 45.067676736227135, 41.33708720539153, 37.59997006929136, 33.85691546204443, 30.108514455364492, 26.355358965222944, 22.598041658379778, 18.837155858794073, 15.073295453930898, 11.307054800980362, 7.539028633001344, 3.769811965005851, 3.6739403974420595e-14, -3.769811965005777, -7.539028633001271, -11.307054800980419, -15.073295453930823, -18.837155858794, -22.598041658379838, -26.35535896522287, -30.108514455364418, -33.85691546204449, -37.59997006929116, -41.33708720539134, -45.06767673622719, -48.79114955846506, -52.506917692582824, -56.21439437571743, -59.91299415432205, -63.602132976616375, -67.28122828481436, -70.94969910711731, -74.60696614945637, -78.25245188696906, -81.88558065519757, -85.50577874099287, -89.11247447311054, -92.70509831248418, -96.28308294216285, -99.84586335689602, -103.39287695235505, -106.92356361397518, -110.43736580540337, -113.93372865654024, -117.41210005116065, -120.87193071409888, -124.31267429798523, -127.73378746952181, -131.1347299952799, -134.51496482700963, -137.87395818644634, -141.21117964959979, -144.5261022305145, -147.81820246448743, -151.08696049072825, -154.33186013445183, -157.55238898838874, -160.74803849369903, -163.91830402028071, -167.0626849464564, -170.180684738027, -173.2718110266802, -176.3355756877419, -179.37149491725566, -182.3790893083815, -185.35788392710023, -188.3074083872101, -191.2271969246069, -194.1167884708333, -196.97572672588694, -199.80356023027542, -202.5998424363073, -205.3641317786066, -208.0959917438414, -210.79499093965472, -213.4607031627856, -216.092707466372, -218.69058822642347, -221.2539352074522, -223.7823436272546, -226.27541422083112, -228.73275330343438, -231.1539728327368, -233.5386904701069, -235.88652964098557, -238.1971195943505, -240.47009546126293, -242.7050983124842, -244.90177521515517, -247.05977928852823, -249.17876975874367, -251.25841201264257, -253.29837765060444, -255.2983445384075, -257.25799685809574, -259.17702515785055, -261.05512640085766, -262.89200401315907, -264.687367930486, -266.4409346440633, -268.1524272453792, -269.82157546991124, -271.4481157398058, -273.0317912054987, -274.57235178627525, -276.0695542097611, -277.5231620503374, -278.9329457664754, -280.29868273698355, -281.62015729616223, -282.8971607678593, -284.12949149842325, -285.31695488854604, -286.4593634239929, -287.5565367052127, -288.6083014758258, -289.6144916499822, -290.5749483385893, -291.4895198744022, -292.35806183597316, -293.180437070458, -293.95651571527407, -294.6861752186066, -295.36930035876156, -296.00578326236047, -296.5955234213742, -297.1384277089954, -297.6344103943434, -298.0833931560025, -298.48530509439007, -298.8400827429518, -299.1476700781842, -299.4080185284815, -299.62108698180526, -299.78684179217674, -299.90525678499, -299.9763132611448, -300.0, -299.9763132611448, -299.90525678499, -299.78684179217674, -299.62108698180526, -299.4080185284815, -299.1476700781842, -298.8400827429518, -298.48530509439007, -298.0833931560025, -297.6344103943434, -297.1384277089954, -296.5955234213742, -296.00578326236047, -295.3693003587616, -294.6861752186066, -293.95651571527407, -293.180437070458, -292.35806183597316, -291.4895198744022, -290.5749483385893, -289.61449164998214, -288.60830147582584, -287.5565367052127, -286.4593634239929, -285.3169548885461, -284.1294914984233, -282.8971607678593, -281.6201572961623, -280.29868273698355, -278.9329457664755, -277.5231620503374, -276.06955420976107, -274.5723517862753, -273.03179120549873, -271.44811573980587, -269.8215754699113, -268.1524272453792, -266.4409346440633, -264.68736793048606, -262.8920040131591, -261.0551264008576, -259.1770251578506, -257.2579968580957, -255.29834453840755, -253.29837765060452, -251.25841201264262, -249.17876975874373, -247.0597792885283, -244.90177521515525, -242.70509831248427, -240.47009546126299, -238.19711959435062, -235.88652964098566, -233.538690470107, -231.15397283273688, -228.7327533034343, -226.27541422083124, -223.7823436272547, -221.2539352074522, -218.69058822642347, -216.09270746637225, -213.4607031627856, -210.7949909396547, -208.0959917438416, -205.3641317786065, -202.59984243630737, -199.80356023027554, -196.97572672588694, -194.11678847083326, -191.22719692460709, -188.30740838721007, -185.35788392710043, -182.3790893083817, -179.37149491725552, -176.33557568774197, -173.2718110266803, -170.18068473802697, -167.0626849464564, -163.9183040202809, -160.74803849369889, -157.55238898838883, -154.33186013445203, -151.0869604907283, -147.8182024644875, -144.5261022305146, -141.21117964959976, -137.87395818644632, -134.51496482700983, -131.13472999527977, -127.7337874695219, -124.31267429798531, -120.87193071409884, -117.41210005116075, -113.93372865654057, -110.43736580540335, -106.92356361397515, -103.39287695235527, -99.84586335689585, -96.28308294216293, -92.70509831248428, -89.11247447311051, -85.50577874099284, -81.8855806551978, -78.25245188696901, -74.60696614945661, -70.94969910711754, -67.2812282848142, -63.602132976616474, -59.912994154322156, -56.214394375717404, -52.5069176925828, -48.7911495584653, -45.06767673622704, -41.337087205391576, -37.5999700692914, -33.856915462044334, -30.10851445536453, -26.355358965222983, -22.598041658379817, -18.837155858793977, -15.073295453931067, -11.307054800980264, -7.539028633001381, -3.7698119650058874];

class Visualizer {
    constructor(canvas) {
        this.canvas = canvas;
        this.ctx = this.canvas.getContext('2d');
        this.width = canvas.width;
        this.height = canvas.height;
        this.xInputs = [];
        this.yInputs = [];
        this.fourierX = [];
        this.fourierY = [];
        this.mousedown = false;
        this.yOffset = 3 * this.canvas.width / 8;
        this.xOffset = 3 * this.canvas.height / 8;
        this.speed = 20;
        // Used to keep track of points traced by the Fourier transform
        this.xtrace = [];
        this.ytrace = [];
        this.xmouseoffset = -this.canvas.width / 2;
        this.ymouseoffset = -this.canvas.height / 2 - 120;

        this.reset = false;

        // Translate (0, 0) to the center of the canvas
        this.ctx.translate(this.canvas.width / 2, this.canvas.height / 2);
    }

    initTest() {
        this.xInputs = testX;
        this.yInputs = testY;
    }

    drawLine(x0, y0, x1, y1, color="#000000", thickness=2) {
        this.ctx.beginPath();
        this.ctx.lineWidth = thickness;
        this.ctx.moveTo(x0, y0);
        this.ctx.lineTo(x1, y1);
        this.ctx.strokeStyle = color;
        this.ctx.stroke();
    }

    drawCircle(x, y, r, color="#000000", thickness=2) {
        this.ctx.beginPath();
        this.ctx.lineWidth = thickness;
        this.ctx.arc(x, y, r, 0, 2 * Math.PI);
        this.ctx.strokeStyle = color;
        this.ctx.stroke();
    }

    drawInput(last=true, color="#000000", thickness=2) {
        this.ctx.beginPath();
        let x0;
        let y0;
        let x1;
        let y1;
        this.ctx.lineWidth = thickness;
        for (let i = 1; i < this.xInputs.length; i++) {
            x0 = this.xInputs[i-1];
            y0 = this.yInputs[i-1];
            x1 = this.xInputs[i];
            y1 = this.yInputs[i];
            this.ctx.strokeStyle = color;
            this.ctx.moveTo(x0, y0);
            this.ctx.lineTo(x1, y1);
        }
        this.ctx.stroke();
        if (last) {
            this.ctx.beginPath();
            this.ctx.moveTo(x1, y1);
            this.ctx.lineTo(this.xInputs[0], this.yInputs[0]);
            this.ctx.strokeStyle = color;
            this.ctx.stroke();
        }
    }

    drawTrace(r, g, b, thickness) {
        for (let i = 1; i < Math.min(this.xtrace.length, 50); i++) {
            let x0 = this.xtrace[i-1];
            let y0 = this.ytrace[i-1];
            let x1 = this.xtrace[i];
            let y1 = this.ytrace[i];
            this.ctx.beginPath();
            this.ctx.strokeStyle = "rgba(" + r + "," + g + "," + b + "," + (1 - 0.015 * i);
            this.ctx.moveTo(x0, y0);
            this.ctx.lineTo(x1, y1);
            this.ctx.lineWidth = thickness;
            this.ctx.stroke();
        }
        for (let i = 50; i < this.xtrace.length; i++) {
            let x0 = this.xtrace[i-1];
            let y0 = this.ytrace[i-1];
            let x1 = this.xtrace[i];
            let y1 = this.ytrace[i];
            this.ctx.beginPath();
            this.ctx.strokeStyle = "rgba(" + r + "," + g + "," + b + "," + (1 - 0.015 * 50);
            this.ctx.moveTo(x0, y0);
            this.ctx.lineTo(x1, y1);
            this.ctx.lineWidth = thickness;
            this.ctx.stroke();
        }
    }

    clearCanvas() {
        this.ctx.save();
        this.ctx.setTransform(1, 0, 0, 1, 0, 0);
        this.ctx.clearRect(0, 0, this.width, this.height);
        this.ctx.restore();
    }

    resetAll() {
        this.xInputs = [];
        this.yInputs = [];
        this.fourierX = [];
        this.fourierY = [];
        this.xtrace = [];
        this.ytrace = [];
        this.clearCanvas();
    }

    animate() {
        if (this.xInputs.length < 2) {
            window.alert("Please draw something");
            return null;
        }
        this.reset = false;

        this.fourierX = discreteFourier(this.xInputs);
        this.fourierY = discreteFourier(this.yInputs);
        const dt = Math.PI * 2 / this.fourierX.length;
        let time = 0;

        let animate1 = setInterval(() => {
            if (this.reset) {
                clearInterval(animate1);
            }

            let yx = -this.yOffset;
            let yy = 0;
            let xx = 0;
            let xy = -this.xOffset;

            // Clear canvas
            this.clearCanvas();

            for (let i = 0; i < this.fourierX.length; i++) {
                let prevyx = yx;
                let prevyy = yy;

                let prevxx = xx;
                let prevxy = xy;

                let yfreq = this.fourierY[i].freq;
                let yradius = this.fourierY[i].amp;
                let yphase = this.fourierY[i].phase;
                yx += yradius * Math.cos(yfreq * time + yphase + Math.PI / 2);
                yy += yradius * Math.sin(yfreq * time + yphase + Math.PI / 2);

                let xfreq = this.fourierX[i].freq;
                let xradius = this.fourierX[i].amp;
                let xphase = this.fourierX[i].phase;
                xx += xradius * Math.cos(xfreq * time + xphase);
                xy += xradius * Math.sin(xfreq * time + xphase);

                this.drawCircle(prevyx, prevyy, yradius);
                this.drawLine(prevyx, prevyy, yx, yy);

                this.drawCircle(prevxx, prevxy, xradius);
                this.drawLine(prevxx, prevxy, xx, xy);
            }

            this.drawLine(yx, yy, xx, yy);
            this.drawLine(xx, xy, xx, yy);

            if (this.xtrace.length <= this.xInputs.length) {
                this.xtrace.unshift(xx);
                this.ytrace.unshift(yy);
            } else {
                this.xtrace.unshift(xx);
                this.ytrace.unshift(yy);
                this.xtrace.pop();
                this.ytrace.pop();
            }

            this.drawInput(false);
            this.drawTrace(255, 0, 0, 5);

            time += dt;
        }, this.speed);
    }
}

// Takes in an array of values
// Outputs an array of objects that represent the discrete fourier transform of the array
// Each object contains the real part, imaginary part, frequency, amplitude, and phase of each circle
// See https://en.wikipedia.org/wiki/Discrete_Fourier_transform
function discreteFourier(x) {
    let X = [];
    const N = x.length;

    for (let k = 0; k < N; k++) {
        let re = 0;
        let im = 0;
        for (let n = 0; n < N; n++) {
            const theta = (2 * Math.PI * k * n) / N;
            re += x[n] * Math.cos(theta);
            im -= x[n] * Math.sin(theta);
        }
        re = re / N;
        im = im / N;

        let freq = k;
        let amp = Math.sqrt(re * re + im * im);
        let phase = Math.atan2(im, re);

        X[k] = {re, im, freq, amp, phase};
    }

    return X;
}

function displayModal() {
    // Get the modal
    var modal = document.getElementById("vismodal");

    // Get the button
    var btn = document.getElementById("intro");

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];

    modal.style.display = "block";

    // When the user clicks on the button, open the modal
    btn.onclick = function() {
        modal.style.display = "block";
    }

    // When the user clicks on <span> (x), close the modal
    span.onclick = function() {
        modal.style.display = "none";
    }
    
    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
}

function main() {
    const CANVAS = document.getElementById('visualizer');

    CANVAS.width = window.innerWidth;
    CANVAS.height = window.innerHeight - 120;

    let vis = new Visualizer(CANVAS);

    // Button to start visualization
    let startVis = document.getElementById('start-vis');
    // Button for resetting
    let resetButton = document.getElementById('reset');

    function mousedownac(e) {
        vis.mousedown = true;
        vis.xInputs.push(e.clientX + vis.xmouseoffset);
        vis.yInputs.push(e.clientY + vis.ymouseoffset);
    }
    function mousemove(e) {
        if (vis.mousedown) {
            vis.clearCanvas();
            vis.xInputs.push(e.clientX + vis.xmouseoffset);
            vis.yInputs.push(e.clientY + vis.ymouseoffset);
            vis.drawInput(false);
        }
    }
    function mouseup(e) {
        vis.mousedown = false;
        vis.clearCanvas();
        vis.drawInput(false);
    }
    function mouseout(e) {
        vis.mousedown = false;
    }
    function listen() {
        vis.canvas.addEventListener("mousedown", mousedownac);
        vis.canvas.addEventListener("mouseup", mouseup);
        vis.canvas.addEventListener("mousemove", mousemove);
        vis.canvas.addEventListener("mouseout", mouseout);
    }
    function reset() {
        vis.resetAll();
    }

    startVis.addEventListener('click', e => {
        vis.animate();
    });
    resetButton.addEventListener('click', e => {
        vis.reset = true;
        setTimeout(reset, 50);
    })

    listen();
}

main();

displayModal();
